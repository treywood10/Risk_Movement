}"
)
library(ggdag)
library(ggplot2)
dag <- dagitty::dagitty("dag {
y <- z -> x
x [exposure]
y [outcome]
}"
)
ggdag(dag) +
theme_dag()
ggdag_adjustment_set(dag, node_size = 14) +
theme(legend.position = "bottom")
ggdag_equivalent_dags(confounder_triangle(1))
confounder_triangle(x = "Risk", y = "Contributions", z = "UN Action") %>%
ggdag_dconnected(text = FALSE, use_labels = "label")
confounder_triangle(x = "Risk", y = "Contributions", z = "UN Action") %>%
ggdag_dconnected(text = FALSE)
confounder_triangle(x = "Risk", y = "Contributions", z = "UN Action") %>%
ggdag_dconnected(text = FALSE, use_labels = "label")
rstudioapi::addTheme("https://raw.githubusercontent.com/batpigandme/night-owlish/master/rstheme/night-owlish.rstheme", apply = TRUE)
?cluster
??cluster
?stargazer
??stargazer
??estimatr
library(tidyverse)
install.packages(tidyverse)
install.packages("tidyverse")
lm <- lapply(1:1000000, function(x) tibble(x = 9*rnorm(10000), u = 36 * rnorm(10000), y = 3+ x*x + u) lm(y~x, .))
lm <- lapply(
1:1000,
function(x) tibble(
x = 9*rnorm(10000),
u = 36*rnorm(10000),
y = 3 + 2*x + u
) %>%
lm(y ~ x, .)
)
lm <- lapply(
1:1000,
function(x) tibble(
x = 9*rnorm(10000),
u = 36*rnorm(10000),
y = 3 + 2*x + u
) %>%
lm(y ~ x, .)
)
lm <- lapply(
1:1000,
function(x) tibble(
x = 9*rnorm(10000),
u = 36*rnorm(10000),
y = 3 + 2*x + u
) %>%
lm(y ~ x, .)
)
lm <- lapply(
1:1000,
function(x) tibble(
x = 9*rnorm(10000),
u = 36*rnorm(10000),
y = 3 + 2*x + u
) %>%
lm(y ~ x, .)
)
as_tibble(t(sapply(lm, coef))) %>%
summary(x)
as_tibble(t(sapply(lm, coef))) %>%
ggplot()+
geom_histogram(aes(x), binwidth = 0.01)Copy
lm <- lapply(
1:1000,
function(x) tibble(
x = 9*rnorm(10000),
u = 36*rnorm(10000),
y = 3 + 2*x + u
) %>%
lm(y ~ x, .)
)
as_tibble(t(sapply(lm, coef))) %>%
summary(x)
as_tibble(t(sapply(lm, coef))) %>%
ggplot()+
geom_histogram(aes(x), binwidth = 0.01)
library(tidyverse)
gap <- function()
{
sdo <-  tibble(
y1 = c(7,5,5,7,4,10,1,5,3,9),
y0 = c(1,6,1,8,2,1,10,6,7,8),
random = rnorm(10)
) %>%
arrange(random) %>%
mutate(
d = c(rep(1,5), rep(0,5)),
y = d * y1 + (1 - d) * y0
) %>%
pull(y)
sdo <- mean(sdo[1:5]-sdo[6:10])
return(sdo)
}
sim <- replicate(10000, gap())
mean(sim)
library(tidyverse)
gap <- function()
{
sdo <-  tibble(
y1 = c(7,5,5,7,4,10,1,5,3,9),
y0 = c(1,6,1,8,2,1,10,6,7,8),
random = rnorm(10)
) %>%
arrange(random) %>%
mutate(
d = c(rep(1,5), rep(0,5)),
y = d * y1 + (1 - d) * y0
) %>%
pull(y)
sdo <- mean(sdo[1:5]-sdo[6:10])
return(sdo)
}
sim <- replicate(1000000, gap())
mean(sim)
ggplot(sim, aes(x = sim)) + geom_histogram()
sim <- as.data.frame(sim)
hist <- ggplot(sim, aes(x = sim)) + geom_histogram()
hist
?vline
??vline
hist <- ggplot(sim, aes(x = sim)) + geom_histogram() + geom_vline(int = mean(sim))
hist
hist <- ggplot(sim, aes(x = sim)) + geom_histogram() + geom_vline(xintercept = mean(sim))
hist
hist <- ggplot(sim, aes(x = sim)) + geom_histogram() + geom_vline(xintercept = mean(sim$sim))
ist <- ggplot(sim, aes(x = sim)) + geom_histogram() + geom_vline(xintercept = mean(sim$sim))
hist
library(tidyverse)
# simulate the data
dat <- tibble(
x = rnorm(1000, 50, 25)
) %>%
mutate(
x = if_else(x < 0, 0, x)
) %>%
filter(x < 100)
# cutoff at x = 50
dat <- dat %>%
mutate(
D  = if_else(x > 50, 1, 0),
y1 = 25 + 0 * D + 1.5 * x + rnorm(n(), 0, 20)
)
ggplot(aes(x, y1, colour = factor(D)), data = dat) +
geom_point(alpha = 0.5) +
geom_vline(xintercept = 50, colour = "grey", linetype = 2)+
stat_smooth(method = "lm", se = F) +
labs(x = "Test score (X)", y = "Potential Outcome (Y1)")
# simulate the discontinuity
dat <- dat %>%
mutate(
y2 = 25 + 40 * D + 1.5 * x + rnorm(n(), 0, 20)
)
# figure
ggplot(aes(x, y2, colour = factor(D)), data = dat) +
geom_point(alpha = 0.5) +
geom_vline(xintercept = 50, colour = "grey", linetype = 2) +
stat_smooth(method = "lm", se = F) +
labs(x = "Test score (X)", y = "Potential Outcome (Y)")
library(tidyverse)
set.seed(1)
tb <- tibble(
x = rnorm(10000),
u = rnorm(10000),
y = 5.5*x + 12*u
)
reg_tb <- tb %>%
lm(y ~ x, .) %>%
print()
reg_tb$coefficients
tb <- tb %>%
mutate(
yhat1 = predict(lm(y ~ x, .)),
yhat2 = 0.0732608 + 5.685033*x,
uhat1 = residuals(lm(y ~ x, .)),
uhat2 = y - yhat2
)
summary(tb[-1:-3])
tb %>%
lm(y ~ x, .) %>%
ggplot(aes(x=x, y=y)) +
ggtitle("OLS Regression Line") +
geom_point(size = 0.05, color = "black", alpha = 0.5) +
geom_smooth(method = lm, color = "black") +
annotate("text", x = -1.5, y = 30, color = "red",
label = paste("Intercept = ", -0.0732608)) +
annotate("text", x = 1.5, y = -30, color = "blue",
label = paste("Slope =", 5.685033))
library(tidyverse)
set.seed(1)
tb <- tibble(
x = 9*rnorm(10),
u = 36*rnorm(10),
y = 3 + 2*x + u,
yhat = predict(lm(y ~ x)),
uhat = residuals(lm(y ~ x))
)
summary(tb)
colSums(tb)
library(tidyverse)
lm <- lapply(
1:1000,
function(x) tibble(
x = 9*rnorm(10000),
u = 36*rnorm(10000),
y = 3 + 2*x + u
) %>%
lm(y ~ x, .)
)
as_tibble(t(sapply(lm, coef))) %>%
summary(x)
as_tibble(t(sapply(lm, coef))) %>%
ggplot()+
geom_histogram(aes(x), binwidth = 0.01)
library(tidyverse)
gap <- function()
{
sdo <-  tibble(
y1 = c(7,5,5,7,4,10,1,5,3,9),
y0 = c(1,6,1,8,2,1,10,6,7,8),
random = rnorm(10)
) %>%
arrange(random) %>%
mutate(
d = c(rep(1,5), rep(0,5)),
y = d * y1 + (1 - d) * y0
) %>%
pull(y)
sdo <- mean(sdo[1:5]-sdo[6:10])
return(sdo)
}
sim <- replicate(10000, gap())
mean(sim)
ggplot(sim, aes(x = sim)) + geom_histogram()
sim <- as.tibble(sim)
hist <- ggplot(sim, aes(x = value)) +geom_histogram()
hist
hist <- ggplot(sim, aes(x = value)) +geom_histogram() + geom_vline(xintercept = mean(sim$value))
hist
hist <- ggplot(sim, aes(x = value)) +geom_histogram() + geom_vline(xintercept = mean(sim$value), color = "blue")
hist
hist <- ggplot(sim, aes(x = value)) +geom_histogram() + geom_vline(xintercept = mean(sim$value), color = "blue", size = 2)
hist
install.packages('vglm')
install.packages("VGAM")
require(VGAM)
# Set WD ----
df <- read_dta("~/Dropbox/Projects/Active_Projects/Mandate_TCC/Data_Analysis/TCC_Mandate_2.dta")
require(ggplot2)
require(tidyverse)
require(MASS)
require(haven)
require(sandwich)
require(lmtest)
require(broom)
require(glmmTMB)
require(gamlss)
require(gamlss.dist)
require(COUNT)
require(glmtoolbox)
require(brglm2)
require(VGAM)
# Set WD ----
df <- read_dta("~/Dropbox/Projects/Active_Projects/Mandate_TCC/Data_Analysis/TCC_Mandate_2.dta")
m10 <- vglm(troops ~ lag_risk_ratio + lag_best_2 + l_troops, family = negbinomial(deviance = TRUE))
PKO <- subset(df, rand1_15 == 1 & lag_best_2 <= 2 & observe == 0)
m10 <- vglm(troops ~ lag_risk_ratio + lag_best_2 + l_troops, family = negbinomial(deviance = TRUE), data = PKO)
m10 <- vglm(troops ~ lag_risk_ratio + lag_best_2 + l_troops, family = negbinomial(), data = PKO)
m10 <- vglm(troops ~ lag_risk_ratio + lag_best_2 + l_troops, family = negbinomial(deviance = TRUE), data = PKO, weights = w, crit = "coef")
m10 <- vglm(troops ~ lag_risk_ratio + lag_best_2 + l_troops, family = negbinomial(deviance = TRUE), data = PKO, crit = "coef")
m10 <- vglm(troops ~ lag_risk_ratio + lag_best_2 + l_troops, family = negbinomial, data = PKO)
f <- ml.nb1(troops ~ lag_risk_ratio + lag_best_2 + l_troops, data = PKO)
f <- ml.nb2(troops ~ lag_risk_ratio + lag_best_2 + l_troops, data = PKO)
summary(f)
library(tidyverse)
library(readr)
df <- read_csv("Desktop/Grades.csv")
View(df)
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
mutate(Final = as.numeric("Final Score"),
Core = as.numeric("UK Core Project Unposted Final Score"))
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
mutate(Final = as.numeric("Final Score"),
Core = as.numeric("UK Core Project Unposted Final Score")) %>%
select(Final, Core)
?as.numeric
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
mutate(Final = as.numeric("Final Score", na.rm = TRUE),
Core = as.numeric("UK Core Project Unposted Final Score", na.rm = TRUE)) %>%
select(Final, Core)
View(df)
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score")
View(df)
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
subset(df, "Final Score" != NA)
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
subset("Final Score" != NA)
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
subset("Final Score" != NA)
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score")
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
slice(-c(1, 2))
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
slice(-c(1, 2)) %>%
mutate(Final = as.numeric("Final Score", na.rm = TRUE),
Core = as.numeric("UK Core Project Unposted Final Score", na.rm = TRUE)) %>%
select(Final, Core)
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
slice(-c(1, 2)) %>%
mutate(Final = as.numeric("Final Score"),
Core = as.numeric("UK Core Project Unposted Final Score")) %>%
select(Final, Core)
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
slice(-c(1, 2))
View(df)
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
slice(-c(1, 2)) %>%
mutate(Final = as.numeric("Final Score"))
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
slice(-c(1, 2)) %>%
mutate(Final = as.numeric(Final Score))
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
slice(-c(1, 2)) %>%
mutate(Final = as.numeric(Final Score))
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
slice(-c(1, 2)) %>%
mutate(Final = as.numeric(`Final Score`))
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
slice(-c(1, 2)) %>%
mutate(Final = as.numeric(`Final Score`),
Core = as.numeric(`UK Core Project Unposted Final Score`))
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Final Score", "UK Core Project Unposted Final Score") %>%
slice(-c(1, 2)) %>%
mutate(Final = as.numeric(`Final Score`),
Core = as.numeric(`UK Core Project Unposted Final Score`)) %>%
select(Final, Core)
hist_F <- ggplot(data = df,
aes(x = Final)) +
geom_histogram()
hist_F
df <- read_csv("Desktop/Grades.csv")
df <- read_csv("Desktop/Grades.csv")
df <- df %>%
select("Unposted Current Score", "UK Core Project Unposted Final Score") %>%
slice(-c(1, 2)) %>%
mutate(Final = as.numeric(`Unposted Current Score`),
Core = as.numeric(`UK Core Project Unposted Final Score`)) %>%
select(Final, Core)
hist_F <- ggplot(data = df,
aes(x = Final)) +
geom_histogram()
hist_F
hist_F <- ggplot(data = df,
aes(x = Final)) +
geom_histogram() +
geom_vline(xintercept = 70)
hist_F
hist_F <- ggplot(data = df,
aes(x = Final)) +
geom_histogram(binwidth = 10) +
geom_vline(xintercept = 70)
hist_F
hist_C <- ggplot(data = df,
aes(x = Core)) +
geom_histogram(binwidth = 10) +
geom_vline(xintercept = 70)
hist_C
hist_C <- ggplot(data = df,
aes(x = Core)) +
geom_histogram(binwidth = 10) +
geom_vline(xintercept = 70) +
xlim(0, 100)
hist_C
hist_C <- ggplot(data = df,
aes(x = Core)) +
geom_histogram(binwidth = 10) +
geom_vline(xintercept = 70) +
xlim(20, 100)
hist_C
hist_C <- ggplot(data = df,
aes(x = Core)) +
geom_histogram(bins = 10) +
geom_vline(xintercept = 70) +
xlim(20, 100)
hist_C
hist_C <- ggplot(data = df,
aes(x = Core)) +
geom_histogram(bins = 8) +
geom_vline(xintercept = 70) +
xlim(20, 100)
hist_C
hist_C <- ggplot(data = df,
aes(x = Core)) +
geom_histogram(bins = 8) +
geom_vline(xintercept = 70, line.type = "dashed") +
xlim(20, 100)
hist_C <- ggplot(data = df,
aes(x = Core)) +
geom_histogram(bins = 8) +
geom_vline(xintercept = 70, linetype = "dashed") +
xlim(20, 100)
hist_C
hist_F <- ggplot(data = df,
aes(x = Final)) +
geom_histogram(binwidth = 10) +
geom_vline(xintercept = 70)
hist_F
range(df$Final)
hist_F <- ggplot(data = df,
aes(x = Final)) +
geom_histogram(binwidth = 10) +
geom_vline(xintercept = 70) +
xlim(20, 100)
hist_F
hist_F <- ggplot(data = df,
aes(x = Final)) +
geom_histogram(binwidth = 8) +
geom_vline(xintercept = 70) +
xlim(20, 100)
hist_C <- ggplot(data = df,
aes(x = Core)) +
geom_histogram(bins = 8) +
geom_vline(xintercept = 70, linetype = "dashed") +
xlim(20, 100)
hist_F <- ggplot(data = df,
aes(x = Final)) +
geom_histogram(bins = 8) +
geom_vline(xintercept = 70) +
xlim(20, 100)
hist_F
mean(df$Final)
hist_F <- ggplot(data = df,
aes(x = Final)) +
geom_histogram(bins = 8) +
geom_vline(xintercept = mean(df$Final)) +
xlim(20, 100)
hist_F
hist_F <- ggplot(data = df,
aes(x = Final)) +
geom_histogram(bins = 8) +
geom_vline(xintercept = mean(df$Final), linetype = "dashed") +
xlim(20, 100)
hist_F
hist_F <- ggplot(data = df,
aes(x = Final)) +
geom_histogram(bins = 8) +
geom_vline(xintercept = mean(df$Final), linetype = "dashed") +
geom_vline(xintercept = median(df$Final), linetype = "solid")
xlim(20, 100)
hist_F
hist_C <- ggplot(data = df,
aes(x = Core)) +
geom_histogram(bins = 8) +
geom_vline(xintercept = mean(df$Core), linetype = "dashed") +
geom_vline(xintercept = median(df$Core), linetype = "solid") +
xlim(20, 100)
hist_C
### Packages
library(tidyverse)
setwd("~/Dropbox/Projects/Active_Projects/Risk_Movement/Data/Make_Data")
Geo <- readRDS("~/Dropbox/Projects/Active_Projects/Risk_Movement/Data/Make_Data/Geo-PKO-v-2-1.rds")
View(Geo)
setwd("~/Dropbox/Projects/Active_Projects/Risk_Movement/Data/Make_Data")
remove(Geo)
### Import GEO-PKO
Geo <- readRDS("~/Geo-PKO-v-2-1.rds")
### Set working directory
setwd("~/Dropbox/Projects/Active_Projects/Risk_Movement/Data/Make_Data")
### Import GEO-PKO
Geo <- readRDS("~/Geo-PKO-v-2-1.rds")
getwd()
