rep_lag_zone_de_confidence <- getmode(dat_bd$lag_zone_de_confidence)
rep_lag_neigh_troops <- mean(dat_bd$lag_neigh_troops, na.rm = TRUE)
rep_lag_quality <- mean(dat_bd$lag_quality, na.rm = TRUE)
rep_lag_no_troops <- mean(dat_bd$lag_no_troops, na.rm = TRUE)
# Create matrix of representative values and the incremental change in Z #
set.x <- cbind(rep_lag_risk_ratio, z.of.i, rep_inter1, rep_best_time, rep_lag_duration, rep_lag_nlights_mean,
rep_lag_drought_prop,rep_lag_mountains_prop, rep_lag_dist_unit, rep_lag_dist_border_own,
rep_lag_dist_cap_hun, rep_lag_days_to_urban, rep_lag_hq,
rep_lag_zone_de_confidence, rep_lag_neigh_troops, rep_lag_quality,
rep_lag_no_troops, 1)
# Multiply representative matrix and simulated coefficients for xB #
xB <- set.x %*% t(simb[,1:18])
# Exponentiation of xB for predicted values #
for(i in 1:length(z.of.i)) {
xB[i, ] <- exp(xB[i,])
}
# Gather X coefficients for partial derivative #
coefs_rr <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:length(z.of.i)) {
coefs_rr[i,] <- t(simb[,1])
}
# Gather X*Z coefficients for partial derivative #
coefs_inter <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:length(z.of.i)) {
coefs_inter[i,] <- t(simb[,3])
}
# Multiply X*Z coefficients by set values of Z #
mult <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:ncol(mult)) {
mult[,i] <- coefs_inter[,i] * t(z.of.i)
}
# Add X coefficients and multiplications for analytical solution of partial derivative #
right <- coefs_rr + mult
# Multiply partial derivative and exp(xB) #
mfx <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:nsims) {
mfx[,i] <- right[,i] * xB[,i]
}
# Get median mfx's and middle 95% of simulated mfx's #
mfx_95 <- apply(X = mfx, MARGIN = 1, FUN = quantile, probs = c(0.025, 0.5, 0.975))
# Data frame of simulated mfx #
plot_bd <- data.frame(X = z.of.i, Lower = mfx_95[1,], Median = mfx_95[2,],
Upper = mfx_95[3,])
# Add factor for facet wrap #
plot_bd <- plot_bd %>%
mutate(group = "Battle Deaths")
### Plot mfx of X ###
plot <- ggplot(data = plot_bd) +
geom_ribbon(alpha = .5, aes(x = X, ymin = Lower, ymax = Upper), fill = "gray50") +
geom_line(data = plot_bd, aes(x = X, y = Median), linewidth = 1.5, lty = 1) +
scale_x_continuous(limits = c(0, 200),
breaks = c(0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200)) +
#scale_y_continuous(limits = c(-2000, 5)) +
geom_rug(data = dat_bd, aes(x = lag_best, y = 10), sides = "b",
position = position_jitter(w = 0, h = 0), alpha = 0.5) +
xlab(expression("Battle Deaths"[italic("t-1")])) +
ylab("Marginal Effect of Risk Ratio on Contributions") +
ggtitle("Effect of Risk Ratio and Battle Deaths on Troop Counts") +
geom_hline(yintercept = 0) +
theme(plot.title = element_text(hjust = 0.5, size = 35),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.key.size = unit(1.5, "cm"),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
axis.title.y = element_text(size = 35, margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = 35, margin = margin(15, 0, 10, 0)),
axis.ticks.length = unit(10, "pt"),
text = element_text(family = "Times New Roman"))
ggsave("Graphs/gg_H3_bd.jpg", width = 14, height = 12, dpi = 400)
#~~~~~~~~~~~~~~~~#
#### Packages ####
#~~~~~~~~~~~~~~~~#
rm(list=ls())
library(lattice)  ## Load a package for graphing
library(MASS)     ## to draw sample from MVN(beta,vcov)
library(VGAM)
library(corrplot) ## for correlation matrix plot
library(ggplot2)
library(grid)
library(haven)
library(tidyverse)
library(ggpubr)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#### Set Working Directory ####
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
setwd("/Users/treywood/Dropbox/Projects/Active_Projects/Risk_Movement/Data_Analysis/R_Figures")
#~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#### Figure 5: RR X Time ####
#~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~#
#### RR X Best Time ####
#~~~~~~~~~~~~~~~~~~~~~~#
### Import data ###
dat_bd_t <- read_dta("data/RR_X_bd_t.dta")
# Betas #
betas <- as.matrix(read.table("betas/betas_RR_X_bd_t.txt", header = T))
# var-cov #
vcov <- as.matrix(read.table("vcovs/vcovs_RR_X_bd_t.txt", header = T))
### Simulate coefficients
nsims <- 10000
set.seed(1234)
simb <- mvrnorm(n = nsims, mu = betas, Sigma = vcov)
### Set values of Z (best-time) ###
z.of.i <- seq(from = 0, to = 240, by = 10)
## Representative observations ##
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
rep_lag_risk_ratio <- mean(dat_bd_t$lag_risk_ratio, na.rm = TRUE)
rep_inter1 <- mean(dat_bd_t$lag_risk_ratio, na.rm = TRUE) * z.of.i
rep_lag_best <- mean(dat_bd_t$lag_best, na.rm = TRUE)
rep_lag_duration <- mean(dat_bd_t$lag_duration, na.rm = TRUE)
rep_lag_nlights_mean <- mean(dat_bd_t$lag_nlights_mean, na.rm = TRUE)
rep_lag_drought_prop <- mean(dat_bd_t$lag_drought_prop, na.rm = TRUE)
rep_lag_mountains_prop <- mean(dat_bd_t$lag_mountains_prop, na.rm = TRUE)
rep_lag_dist_unit <- mean(dat_bd_t$lag_dist_unit, na.rm = TRUE)
rep_lag_dist_border_own <- mean(dat_bd_t$lag_dist_border_own, na.rm = TRUE)
rep_lag_dist_cap_hun <- mean(dat_bd_t$lag_dist_cap_hun, na.rm = TRUE)
rep_lag_days_to_urban <- mean(dat_bd_t$lag_days_to_urban, na.rm = TRUE)
rep_lag_hq <- getmode(dat_bd_t$lag_hq)
rep_lag_zone_de_confidence <- getmode(dat_bd_t$lag_zone_de_confidence)
rep_lag_neigh_troops <- mean(dat_bd_t$lag_neigh_troops, na.rm = TRUE)
rep_lag_quality <- mean(dat_bd_t$lag_quality, na.rm = TRUE)
rep_lag_no_troops <- mean(dat_bd_t$lag_no_troops, na.rm = TRUE)
### Create matrix of representative values and the incremental change in Z ###
set.x <- cbind(rep_lag_risk_ratio, z.of.i, rep_inter1, rep_lag_best, rep_lag_duration, rep_lag_nlights_mean,
rep_lag_drought_prop, rep_lag_mountains_prop, rep_lag_dist_unit, rep_lag_dist_border_own,
rep_lag_dist_cap_hun, rep_lag_days_to_urban, rep_lag_hq,
rep_lag_zone_de_confidence, rep_lag_neigh_troops, rep_lag_quality,
rep_lag_no_troops, 1)
### Multiply representative matrix and simulated coefficients for xB ###
xB <- set.x %*% t(simb[,1:18])
### Exponentiation of xB for predicted values ###
for(i in 1:length(z.of.i)) {
xB[i, ] <- exp(xB[i,])
}
### Gather X coefficients for partial derivative ###
coefs_rr <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:length(z.of.i)) {
coefs_rr[i,] <- t(simb[,1])
}
### Gather X*Z coefficients for partial derivative ###
coefs_inter <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:length(z.of.i)) {
coefs_inter[i,] <- t(simb[,3])
}
### Multiply X*Z coefficients by set values of Z ###
mult <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:ncol(mult)) {
mult[,i] <- coefs_inter[,i] * t(z.of.i)
}
### Add X coefficients and multiplications for analytical solution of partial derivative ###
right <- coefs_rr + mult
### Multiply partial derivative and exp(xB) ###
mfx <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:nsims) {
mfx[,i] <- right[,i] * xB[,i]
}
### Get median mfx's and middle 95% of simulated mfx's ###
mfx_95 <- apply(X = mfx, MARGIN = 1, FUN = quantile, probs = c(0.025, 0.5, 0.975))
### Data frame of simulated mfx ###
plot_bd_t <- data.frame(X = z.of.i, Lower = mfx_95[1,], Median = mfx_95[2,],
Upper = mfx_95[3,])
# Add factor for facet wrap #
plot_bd_t <- plot_bd_t %>%
mutate(group = "Battle Deaths")
### Arrow point to insignifiance ###
arrows_bd_t <- tibble (
x1 = 160,
x2 = 130,
y1 = 0,
y2 = -10,
group = "Battle Deaths",
label = "Statistical Insignificance (X = 160)"
)
### Plot mfx of X ###
plot <- ggplot(data = plot_bd_t) +
geom_ribbon(alpha = .5, aes(x = X, ymin = Lower, ymax = Upper), fill = "gray50") +
geom_line(data = plot_bd_t, aes(x = X, y = Median), linewidth = 1.5, lty = 1) +
scale_x_continuous(limits = c(0, 240),
breaks = c(0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 220, 240)) +
scale_y_continuous(limits = c(-25, 5)) +
geom_rug(data = dat_bd_t, aes(x = best_time, y = 10), sides = "b",
position = position_jitter(w = 0, h = 0), alpha = 0.005) +
xlab(expression("Months Since Last Battle Death")) +
ylab("Marginal Effect of Risk Ratio") +
ggtitle("Effect of Risk Ratio and Time on Troop Counts") +
geom_hline(yintercept = 0) +
theme(plot.title = element_text(hjust = 0.5, size = 35),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.key.size = unit(1.5, "cm"),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
axis.title.y = element_text(size = 35, margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = 35, margin = margin(15, 0, 10, 0)),
axis.ticks.length = unit(10, "pt"),
text = element_text(family = "Times New Roman")) +
geom_segment(x = 130, y = -5, xend = 150, yend = -0.5,
color = "black", arrow = arrow(angle = 20)) +
geom_text(aes(x = 130, y = -6), label = "Statistical Insignificance (X = 150)",
size = 8, family = "Times New Roman")
ggsave("Graphs/gg_H4_bd.jpg", width = 14, height = 12, dpi = 400)
#~~~~~~~~~~~~~~~~#
#### Packages ####
#~~~~~~~~~~~~~~~~#
rm(list=ls())
library(lattice)  ## Load a package for graphing
library(MASS)     ## to draw sample from MVN(beta,vcov)
library(VGAM)
library(corrplot) ## for correlation matrix plot
library(ggplot2)
library(grid)
library(haven)
library(tidyverse)
library(ggpubr)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#### Set Working Directory ####
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
setwd("/Users/treywood/Dropbox/Projects/Active_Projects/Risk_Movement/Data_Analysis/R_Figures")
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#### Figure 7: RR X FC Duration ####
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~#
#### Battle Deaths ####
#~~~~~~~~~~~~~~~~~~~~~#
# Import dataset #
dat_bd <- read_dta("data/RR_X_FC_bd.dta")
# Betas #
betas <- as.matrix(read.table("betas/betas_RR_X_FC_bd.txt", header = T))
# var-cov #
vcov <- as.matrix(read.table("vcovs/vcovs_RR_X_FC_bd.txt", header = T))
# Simulate Coefficients #
nsims <- 10000
set.seed(1234)
simb <- mvrnorm(n = nsims, mu = betas, Sigma = vcov)
# Set values of Z (best) #
z.of.i <- seq(from = 0.4, to = 1, by = 0.01)
# Representative observations #
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
rep_lag_duration <- mean(dat_bd$lag_duration, na.rm = TRUE)
rep_inter1 <- mean(dat_bd$lag_duration, na.rm = TRUE) * z.of.i
rep_lag_best <- mean(dat_bd$lag_duration, na.rm = TRUE)
rep_best_time <- mean(dat_bd$best_time, na.rm = TRUE)
rep_lag_nlights_mean <- mean(dat_bd$lag_nlights_mean, na.rm = TRUE)
rep_lag_drought_prop <- mean(dat_bd$lag_drought_prop, na.rm = TRUE)
rep_lag_mountains_prop <- mean(dat_bd$lag_mountains_prop, na.rm = TRUE)
rep_lag_dist_unit <- mean(dat_bd$lag_dist_unit, na.rm = TRUE)
rep_lag_dist_border_own <- mean(dat_bd$lag_dist_border_own, na.rm = TRUE)
rep_lag_dist_cap_hun <- mean(dat_bd$lag_dist_cap_hun, na.rm = TRUE)
rep_lag_days_to_urban <- mean(dat_bd$lag_days_to_urban, na.rm = TRUE)
rep_lag_hq <- getmode(dat_bd$lag_hq)
rep_lag_zone_de_confidence <- getmode(dat_bd$lag_zone_de_confidence)
rep_lag_neigh_troops <- mean(dat_bd$lag_neigh_troops, na.rm = TRUE)
rep_lag_quality <- mean(dat_bd$lag_quality, na.rm = TRUE)
rep_lag_no_troops <- mean(dat_bd$lag_no_troops, na.rm = TRUE)
# Create matrix of representative values and the incremental change in Z #
set.x <- cbind(z.of.i, rep_lag_duration, rep_inter1, rep_lag_best, rep_best_time, rep_lag_nlights_mean,
rep_lag_drought_prop, rep_lag_mountains_prop, rep_lag_dist_unit, rep_lag_dist_border_own,
rep_lag_dist_cap_hun, rep_lag_days_to_urban, rep_lag_hq,
rep_lag_zone_de_confidence, rep_lag_neigh_troops, rep_lag_quality,
rep_lag_no_troops, 1)
# Multiply representative matrix and simulated coefficients for xB #
xB <- set.x %*% t(simb[,1:18])
# Exponentiation of xB for predicted values #
for(i in 1:length(z.of.i)) {
xB[i, ] <- exp(xB[i,])
}
# Gather X coefficients for partial derivative #
coefs_rr <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:length(z.of.i)) {
coefs_rr[i,] <- t(simb[,1])
}
# Gather X*Z coefficients for partial derivative #
coefs_inter <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:length(z.of.i)) {
coefs_inter[i,] <- t(simb[,3])
}
# Multiply X*Z coefficients by set values of Z #
mult <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:ncol(mult)) {
mult[,i] <- coefs_inter[,i] * t(z.of.i)
}
# Add X coefficients and multiplications for analytical solution of partial derivative #
right <- coefs_rr + mult
# Multiply partial derivative and exp(xB) #
mfx <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:nsims) {
mfx[,i] <- right[,i] * xB[,i]
}
# Get median mfx's and middle 95% of simulated mfx's #
mfx_95 <- apply(X = mfx, MARGIN = 1, FUN = quantile, probs = c(0.025, 0.5, 0.975))
# Data frame of simulated mfx #
plot_bd <- data.frame(X = z.of.i, Lower = mfx_95[1,], Median = mfx_95[2,],
Upper = mfx_95[3,])
# Add factor for facet wrap #
plot_bd <- plot_bd %>%
mutate(group = "Battle Deaths")
### Plot mfx of X ###
plot <- ggplot(data = plot_bd) +
geom_ribbon(alpha = .5, aes(x = X, ymin = Lower, ymax = Upper), fill = "gray50") +
geom_line(data = plot_bd, aes(x = X, y = Median), linewidth = 1.5, lty = 1) +
geom_rug(data = dat_bd, aes(x = lag_risk_ratio, y = 2), sides = "b",
position = position_jitter(w = 0.012, h = 0), alpha = 0.5) +
xlab(expression("Risk Ratio"[italic("t-1")])) +
ylab("Marginal Effect of FC Duration on Contributions") +
ggtitle("Effect of Risk Ratio and FC Duration on Troop Counts") +
geom_hline(yintercept = 0) +
theme(plot.title = element_text(hjust = 0.5, size = 35),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.key.size = unit(1.5, "cm"),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
axis.title.y = element_text(size = 35, margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = 35, margin = margin(15, 0, 10, 0)),
axis.ticks.length = unit(10, "pt"),
text = element_text(family = "Times New Roman")) #+
ggsave("Graphs/gg_H6_bd.jpg", width = 14, height = 12, dpi = 400)
plot <- ggplot(data = plot_bd_t) +
geom_ribbon(alpha = .5, aes(x = X, ymin = Lower, ymax = Upper), fill = "gray50") +
geom_line(data = plot_bd_t, aes(x = X, y = Median), linewidth = 1.5, lty = 1) +
scale_x_continuous(limits = c(0, 240),
breaks = c(0, 40, 80, 120, 160, 200, 240)) +
scale_y_continuous(limits = c(-25, 5)) +
geom_rug(data = dat_bd_t, aes(x = best_time, y = 10), sides = "b",
position = position_jitter(w = 0, h = 0), alpha = 0.005) +
xlab(expression("Months Since Last Battle Death")) +
ylab("Marginal Effect of Risk Ratio") +
ggtitle("Effect of Risk Ratio and Time on Troop Counts") +
geom_hline(yintercept = 0, linewidth = 2) +
theme(plot.title = element_text(hjust = 0.5, size = 35),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.key.size = unit(1.5, "cm"),
axis.text.x = element_text(size = 40),
axis.text.y = element_text(size = 40),
axis.title.y = element_text(size = 45, margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = 45, margin = margin(15, 0, 10, 0)),
axis.ticks.length = unit(10, "pt"),
text = element_text(family = "Times New Roman")) +
geom_segment(x = 130, y = -5, xend = 150, yend = -0.5,
color = "black", arrow = arrow(angle = 20)) +
geom_text(aes(x = 130, y = -6), label = "Statistical Insignificance (X = 150)",
size = 12, family = "Times New Roman")
#~~~~~~~~~~~~~~~~#
#### Packages ####
#~~~~~~~~~~~~~~~~#
rm(list=ls())
library(lattice)  ## Load a package for graphing
library(MASS)     ## to draw sample from MVN(beta,vcov)
library(VGAM)
library(corrplot) ## for correlation matrix plot
library(ggplot2)
library(grid)
library(haven)
library(tidyverse)
library(ggpubr)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#### Set Working Directory ####
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
setwd("/Users/treywood/Dropbox/Projects/Active_Projects/Risk_Movement/Data_Analysis/R_Figures")
#~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#### Figure 5: RR X Time ####
#~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#~~~~~~~~~~~~~~~~~~~~~~#
#### RR X Best Time ####
#~~~~~~~~~~~~~~~~~~~~~~#
### Import data ###
dat_bd_t <- read_dta("data/RR_X_bd_t.dta")
# Betas #
betas <- as.matrix(read.table("betas/betas_RR_X_bd_t.txt", header = T))
# var-cov #
vcov <- as.matrix(read.table("vcovs/vcovs_RR_X_bd_t.txt", header = T))
### Simulate coefficients
nsims <- 10000
set.seed(1234)
simb <- mvrnorm(n = nsims, mu = betas, Sigma = vcov)
### Set values of Z (best-time) ###
z.of.i <- seq(from = 0, to = 240, by = 10)
## Representative observations ##
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
rep_lag_risk_ratio <- mean(dat_bd_t$lag_risk_ratio, na.rm = TRUE)
rep_inter1 <- mean(dat_bd_t$lag_risk_ratio, na.rm = TRUE) * z.of.i
rep_lag_best <- mean(dat_bd_t$lag_best, na.rm = TRUE)
rep_lag_duration <- mean(dat_bd_t$lag_duration, na.rm = TRUE)
rep_lag_nlights_mean <- mean(dat_bd_t$lag_nlights_mean, na.rm = TRUE)
rep_lag_drought_prop <- mean(dat_bd_t$lag_drought_prop, na.rm = TRUE)
rep_lag_mountains_prop <- mean(dat_bd_t$lag_mountains_prop, na.rm = TRUE)
rep_lag_dist_unit <- mean(dat_bd_t$lag_dist_unit, na.rm = TRUE)
rep_lag_dist_border_own <- mean(dat_bd_t$lag_dist_border_own, na.rm = TRUE)
rep_lag_dist_cap_hun <- mean(dat_bd_t$lag_dist_cap_hun, na.rm = TRUE)
rep_lag_days_to_urban <- mean(dat_bd_t$lag_days_to_urban, na.rm = TRUE)
rep_lag_hq <- getmode(dat_bd_t$lag_hq)
rep_lag_zone_de_confidence <- getmode(dat_bd_t$lag_zone_de_confidence)
rep_lag_neigh_troops <- mean(dat_bd_t$lag_neigh_troops, na.rm = TRUE)
rep_lag_quality <- mean(dat_bd_t$lag_quality, na.rm = TRUE)
rep_lag_no_troops <- mean(dat_bd_t$lag_no_troops, na.rm = TRUE)
### Create matrix of representative values and the incremental change in Z ###
set.x <- cbind(rep_lag_risk_ratio, z.of.i, rep_inter1, rep_lag_best, rep_lag_duration, rep_lag_nlights_mean,
rep_lag_drought_prop, rep_lag_mountains_prop, rep_lag_dist_unit, rep_lag_dist_border_own,
rep_lag_dist_cap_hun, rep_lag_days_to_urban, rep_lag_hq,
rep_lag_zone_de_confidence, rep_lag_neigh_troops, rep_lag_quality,
rep_lag_no_troops, 1)
### Multiply representative matrix and simulated coefficients for xB ###
xB <- set.x %*% t(simb[,1:18])
### Exponentiation of xB for predicted values ###
for(i in 1:length(z.of.i)) {
xB[i, ] <- exp(xB[i,])
}
### Gather X coefficients for partial derivative ###
coefs_rr <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:length(z.of.i)) {
coefs_rr[i,] <- t(simb[,1])
}
### Gather X*Z coefficients for partial derivative ###
coefs_inter <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:length(z.of.i)) {
coefs_inter[i,] <- t(simb[,3])
}
### Multiply X*Z coefficients by set values of Z ###
mult <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:ncol(mult)) {
mult[,i] <- coefs_inter[,i] * t(z.of.i)
}
### Add X coefficients and multiplications for analytical solution of partial derivative ###
right <- coefs_rr + mult
### Multiply partial derivative and exp(xB) ###
mfx <- matrix(NA, nrow = length(z.of.i), ncol = nsims)
for(i in 1:nsims) {
mfx[,i] <- right[,i] * xB[,i]
}
### Get median mfx's and middle 95% of simulated mfx's ###
mfx_95 <- apply(X = mfx, MARGIN = 1, FUN = quantile, probs = c(0.025, 0.5, 0.975))
### Data frame of simulated mfx ###
plot_bd_t <- data.frame(X = z.of.i, Lower = mfx_95[1,], Median = mfx_95[2,],
Upper = mfx_95[3,])
# Add factor for facet wrap #
plot_bd_t <- plot_bd_t %>%
mutate(group = "Battle Deaths")
### Arrow point to insignifiance ###
arrows_bd_t <- tibble (
x1 = 160,
x2 = 130,
y1 = 0,
y2 = -10,
group = "Battle Deaths",
label = "Statistical Insignificance (X = 160)"
)
### Plot mfx of X ###
plot <- ggplot(data = plot_bd_t) +
geom_ribbon(alpha = .5, aes(x = X, ymin = Lower, ymax = Upper), fill = "gray50") +
geom_line(data = plot_bd_t, aes(x = X, y = Median), linewidth = 1.5, lty = 1) +
scale_x_continuous(limits = c(0, 240),
breaks = c(0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200, 220, 240)) +
scale_y_continuous(limits = c(-25, 5)) +
geom_rug(data = dat_bd_t, aes(x = best_time, y = 10), sides = "b",
position = position_jitter(w = 0, h = 0), alpha = 0.005) +
xlab(expression("Months Since Last Battle Death")) +
ylab("Marginal Effect of Risk Ratio") +
ggtitle("Effect of Risk Ratio and Time on Troop Counts") +
geom_hline(yintercept = 0) +
theme(plot.title = element_text(hjust = 0.5, size = 35),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.key.size = unit(1.5, "cm"),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
axis.title.y = element_text(size = 35, margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = 35, margin = margin(15, 0, 10, 0)),
axis.ticks.length = unit(10, "pt"),
text = element_text(family = "Times New Roman")) +
geom_segment(x = 130, y = -5, xend = 150, yend = -0.5,
color = "black", arrow = arrow(angle = 20)) +
geom_text(aes(x = 130, y = -6), label = "Statistical Insignificance (X = 150)",
size = 8, family = "Times New Roman")
ggsave("Graphs/gg_H4_bd.jpg", width = 14, height = 12, dpi = 400)
plot <- ggplot(data = plot_bd_t) +
geom_ribbon(alpha = .5, aes(x = X, ymin = Lower, ymax = Upper), fill = "gray50") +
geom_line(data = plot_bd_t, aes(x = X, y = Median), linewidth = 1.5, lty = 1) +
scale_x_continuous(limits = c(0, 240),
breaks = c(0, 40, 80, 120, 160, 200, 240)) +
scale_y_continuous(limits = c(-25, 5)) +
geom_rug(data = dat_bd_t, aes(x = best_time, y = 10), sides = "b",
position = position_jitter(w = 0, h = 0), alpha = 0.005) +
xlab(expression("Months Since Last Battle Death")) +
ylab("Marginal Effect of Risk Ratio") +
ggtitle("Effect of Risk Ratio and Time on Troop Counts") +
geom_hline(yintercept = 0, linewidth = 2) +
theme(plot.title = element_text(hjust = 0.5, size = 35),
legend.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.key.size = unit(1.5, "cm"),
axis.text.x = element_text(size = 40),
axis.text.y = element_text(size = 40),
axis.title.y = element_text(size = 45, margin = margin(0, 15, 0, 0)),
axis.title.x = element_text(size = 45, margin = margin(15, 0, 10, 0)),
axis.ticks.length = unit(10, "pt"),
text = element_text(family = "Times New Roman")) +
geom_segment(x = 130, y = -5, xend = 150, yend = -0.5,
color = "black", arrow = arrow(angle = 20)) +
geom_text(aes(x = 130, y = -6), label = "Statistical Insignificance (X = 150)",
size = 12, family = "Times New Roman")
ggsave("Graphs/gg_H4_bd_pres.jpg", width = 14, height = 12, dpi = 400)
